"""Subclass of ISTUtama, which is generated by wxFormBuilder."""
import wx
from controllers.properties_ist import ISTInheritedProperties ,PropertiesInput
from controllers.properties_tampilan import PropertiesTampilan, AddTextCtrlProperties
from views.istcore import GridViewInputManual
# Implementing ISTUtama

class GridViewInherited(GridViewInputManual):

    def __init__(self,parent,*args,**kwds):
        super().__init__(parent,*args,**kwds)
        self.parent = parent
        self.parent.m_grid2 = self.m_grid2
        self.parent.m_grid2.SetColLabelValue(0, "")
        self.parent.m_grid2.SetColLabelValue(1, "SE")
        self.parent.m_grid2.SetColLabelValue(2, "")
        self.parent.m_grid2.SetColLabelValue(3, "WA")
        self.parent.m_grid2.SetColLabelValue(4, "")
        self.parent.m_grid2.SetColLabelValue(5, "AN")
        self.parent.m_grid2.SetColLabelValue(6, "")
        self.parent.m_grid2.SetColLabelValue(7, "GE")
        self.parent.m_grid2.SetColLabelValue(8, "")
        self.parent.m_grid2.SetColLabelValue(9, "RA")
        self.parent.m_grid2.SetColLabelValue(10, "")
        self.parent.m_grid2.SetColLabelValue(11, "ZR")
        self.parent.m_grid2.SetColLabelValue(12, "")
        self.parent.m_grid2.SetColLabelValue(13, "FA")
        self.parent.m_grid2.SetColLabelValue(14, "")
        self.parent.m_grid2.SetColLabelValue(15, "WU")
        self.parent.m_grid2.SetColLabelValue(16, "")
        self.parent.m_grid2.SetColLabelValue(17, "ME")
        self.parent.m_grid2.SetColLabelValue(18, "")

        for l in range(0, 18):
            if not(l % 2):
                for i in range(0, 20):
                    stringval = i + 1

                    if l == 6 and i >= 16 :
                        self.parent.m_grid2.SetCellValue(i, l, "")
                        self.parent.m_grid2.SetCellBackgroundColour(i, l, "grey")
                        self.parent.m_grid2.SetReadOnly(i, l)

                    else :
                        self.parent.m_grid2.SetCellValue(i, l, str(stringval))
                        self.parent.m_grid2.SetCellAlignment(i, l, wx.ALIGN_CENTRE, wx.ALIGN_CENTRE)
                        self.parent.m_grid2.SetReadOnly(i, l)

            elif l == 7 and i >= 16 :
                for i in range(1, 20):
                    stringval = i + 1

                    if l == 7 and i >= 16 :
                        self.parent.m_grid2.SetCellValue(i, l, "")
                        self.parent.m_grid2.SetCellBackgroundColour(i, l, "grey")
                        self.parent.m_grid2.SetReadOnly(i, l)

                    else :
                        self.parent.m_grid2.SetCellValue(i, l, "")
                        self.parent.m_grid2.SetCellAlignment(i, l, wx.ALIGN_CENTRE, wx.ALIGN_CENTRE)

    def getdata(self):
        self.data = []

        for i in range (0,20):
            self.datapertama = []
            for l in range(0,18):
                if l % 2:
                    self.a = self.parent.m_grid2.GetCellValue(i, l)
                    self.datapertama.append(self.a)

            self.data.append(self.datapertama)

        return self.data

    def gridOkOnButtonClick(self,event):

        self.Close()




class ISTISTUtama(ISTInheritedProperties):

    def __init__(self, parent , *args, **kwds):
        super().__init__(parent, *args, **kwds)
        self.m_simplebook1.SetSelection(0)
        self.properties_tamp = PropertiesTampilan(self)
        self.properties_tamp.logo_show()
        self.properties_tamp.tabel_show()
        self.data_peserta = PropertiesInput(self)
        self.m_selanjutnya.Disable()
        self.Maximize()
        pass
    
    def requiredclick(self,event) :

        if self.m_textCtrl_no_tes.GetValue()== "":
            self.m_selanjutnya.Disable()
        else:
            self.m_selanjutnya.Enable()
        pass